import fetch from 'node-fetch';

import { Handler, HandlerEvent } from '@netlify/functions';
import sgMail, { MailDataRequired } from '@sendgrid/mail';

interface EmailParams {
	to: string;
	from: string;
	name: string;
	link: string;
}

interface EmailProps {
	data: EmailParams;
}

interface ResponseInterface {
	statusCode: number;
	body: string;
}

const apiKey = process.env.SENDGRID_API_KEY as string;
if (!apiKey) {
	console.error('SendGrid API key is not set');
	throw new Error('SendGrid API key is not set');
}
sgMail.setApiKey(apiKey);

export const handler: Handler = async (event: HandlerEvent): Promise<ResponseInterface> => {
	try {
		const { data }: EmailProps = JSON.parse(event.body || '{}');
		const { to, from, name, link } = data;

		const response = await fetch(link);
		const arrayBuffer = await response.arrayBuffer();
		const base64Content = Buffer.from(arrayBuffer).toString('base64');

		const message: MailDataRequired = {
			to,
			from: { email: from, name },
			subject: `${name} - Resume`,
			text: `Hi ${to},\n\nPlease find my resume attached.\n\nBest regards,\n${name}.\n\nThis email was automatically generated by Aashay Thakur's Portfolio. You can still reply to this email for further communication.`,
			html: `<p>Hi ${to},</p><p>Please find my resume attached.</p><p>Best regards,<br>${name}.</p><p>This email was automatically generated by Aashay Thakur's Portfolio. You can still reply to this email for further communication.</p>`,
			attachments: [
				{
					content: base64Content,
					filename: `${name} - Resume.pdf`,
					type: 'application/pdf',
					disposition: 'attachment',
				},
			],
		};

		await sgMail.send(message);
		return {
			statusCode: 200,
			body: JSON.stringify({ message: 'Email sent successfully' }),
		};
	} catch (error) {
		console.error('Error:', error.stack || error);
		return {
			statusCode: 500,
			body: JSON.stringify({ message: `Error: ${error.message}` }),
		};
	}
};
